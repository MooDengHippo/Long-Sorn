# /docker-compose.yml

version: '3.8'

services:
  # Service ที่ 1: Database (PostgreSQL) - สำหรับการพัฒนาในเครื่อง (Local Development)
  # หมายเหตุ: จาก Log ปัจจุบัน api-server และ video_worker เชื่อมต่อกับ Supabase DB โดยตรง
  # Service นี้จึงอาจจะยังไม่ได้ถูกใช้งาน แต่เก็บไว้สำหรับการทดสอบในอนาคต
  db:
    image: postgres:latest
    container_name: longsorn-db
    volumes:
      - longsorn-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - long-sorn-net

  # Service ที่ 2: Backend API Server
  api-server:
    container_name: longsorn-api
    build:
      context: ./backend
      dockerfile: ./services/api-server/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./backend/services/api-server/.env
    # ไม่ได้ใส่ depends_on เพราะเชื่อมต่อกับ External Cloud Services (Supabase, Redis, R2)
    command: ["python", "-m", "uvicorn", "src.api.api:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    networks:
      - long-sorn-net

  # --- Service ที่ 3: Video Processing Worker (ส่วนที่เพิ่มเข้ามาใหม่) ---
  video_worker:
    container_name: longsorn-video-worker
    build:
      context: ./backend
      dockerfile: ./services/video_worker/Dockerfile
    env_file:
      - ./backend/services/video_worker/.env
    # ไม่ได้ใส่ เพราะเชื่อมต่อกับ External Cloud Services (Supabase, Redis, R2)
    # Worker จะทำงานวนลูปเพื่อรอรับงานจาก Redis
    networks:
      - long-sorn-net

# กำหนดเครือข่ายส่วนกลางเพื่อให้ทุก Service อยู่ในวงเดียวกัน
networks:
  long-sorn-net:
    driver: bridge

# กำหนด Volume เพื่อเก็บข้อมูลของ Database อย่างถาวร
volumes:
  longsorn-db-data: